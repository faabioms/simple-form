# Ansible playbook for deploying a Flask app
---
# Install system apt packages
- hosts: webservers
  become: yes
  become_method: sudo
  tasks:
  - name: update cache
    apt: name=python-software-properties state=present update_cache=yes cache_valid_time=43200
  - name: install packages
    apt: name={{item}} state=installed
    with_items:
      - python-pip
      - python3
      - python3-pip
      - python3-dev
      - libmysqlclient-dev
  - name: dev locale
    action: command sudo update-locale LC_ALL=en_US.UTF-8
  - name: set default locale
    sudo: yes
    lineinfile: dest=/etc/default/locale
      regexp="LC_ALL"
      line="LC_ALL=\"en_US.UTF-8\""

# Install the app, note: don't do these tasks with become sudo
- hosts: webservers
  tasks:
  - name: clone repo
    git:
      repo: 'https://github.com/{{ github_user }}/{{ app_name }}.git' 
      dest: /home/{{ ansible_ssh_user }}/{{ app_name }}
      update: yes  # Does a git pull if the repo already exists
  - name: Installing python libraries using requirements file
    pip:
      requirements: /home/{{ ansible_ssh_user }}/{{ app_name }}/requirements.txt

# Configure app systemd service and nginx
- hosts: webservers
  become: yes
  become_method: sudo
  tasks:
  - name: template systemd service config
    copy:
      src: .service
      dest: /etc/systemd/system/{{ app_name }}.service
  - name: start systemd app service
    systemd: name={{ app_name }}.service state=restarted enabled=yes

# Run a quick test to verify the site is working
- hosts: webservers
  tasks:
  - name: get url
    get_url:
      url: http://{{inventory_hostname}}
      dest: /tmp/index.html
  - name: read html
    shell: cat /tmp/index.html
    register: html_contents
  - name: check for string in html
    when: html_contents.stdout.find('hello') != -1
    debug: msg="success!"